<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1"
>
    <xs:element name="concrete5-cif">
        <xs:annotation>
            <xs:documentation>The root node</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <!-- see /concrete/bedrock/documentation/colors.xml -->
                <xs:element name="area" minOccurs="0" maxOccurs="1" type="area" />
                <xs:element name="attributecategories" minOccurs="0" maxOccurs="1" type="attributeCategories" />
                <xs:element name="attributekeys" minOccurs="0" maxOccurs="1" type="attributeKeys" />
                <xs:element name="attributesets" minOccurs="0" maxOccurs="1" type="attributeSets" />
                <xs:element name="attributetypes" minOccurs="0" maxOccurs="1" type="attributeTypes" />
                <xs:element name="banned_words" minOccurs="0" maxOccurs="1" type="bannedWords" />
                <xs:element name="blocktypes" minOccurs="0" maxOccurs="1" type="blockTypes" />
                <xs:element name="blocktypesets" minOccurs="0" maxOccurs="1" type="blockTypeSets" />
                <xs:element name="boarddatasources" minOccurs="0" maxOccurs="1" type="boardDataSources" />
                <xs:element name="boardslottemplates" minOccurs="0" maxOccurs="1" type="boardSlotTemplates" />
                <xs:element name="boardtemplates" minOccurs="0" maxOccurs="1" type="boardTemplates" />
                <xs:element name="boards" minOccurs="0" maxOccurs="1" type="boards" />
                <xs:element name="config" minOccurs="0" maxOccurs="1" type="config" />
                <xs:element name="containers" minOccurs="0" maxOccurs="1" type="containers" />
                <xs:element name="conversationeditors" minOccurs="0" maxOccurs="1" type="conversationEditors" />
                <xs:element name="conversationratingtypes" minOccurs="0" maxOccurs="1" type="conversationRatingTypes" />
                <xs:element name="designtags" minOccurs="0" maxOccurs="1" type="designTags" />
                <xs:element name="expressentities" minOccurs="0" maxOccurs="1" type="expressEntities" />
                <xs:element name="expressentries" minOccurs="0" maxOccurs="1" type="expressEntries" />
                <xs:element name="flag_types" minOccurs="0" maxOccurs="1" type="flagTypes" />
                <xs:element name="geolocators" minOccurs="0" maxOccurs="1" type="geolocators" />
                <xs:element name="groups" minOccurs="0" maxOccurs="1" type="groups" />
                <xs:element name="ipaccesscontrolcategories" minOccurs="0" maxOccurs="1" type="ipAccessControlCategories" />
                <xs:element name="jobs" minOccurs="0" maxOccurs="1" type="jobs" />
                <xs:element name="jobsets" minOccurs="0" maxOccurs="1" type="jobSets" />
                <xs:element name="packages" minOccurs="0" maxOccurs="1" type="packages" />
                <xs:element name="pagefeeds" minOccurs="0" maxOccurs="1" type="pageFeeds" />
                <xs:element name="pages" minOccurs="0" maxOccurs="1" type="pages" />
                <xs:element name="pagetemplates" minOccurs="0" maxOccurs="1" type="pageTemplates" />
                <xs:element name="pagetypecomposercontroltypes" minOccurs="0" maxOccurs="1" type="pageTypeComposerControlTypes" />
                <xs:element name="pagetypepublishtargettypes" minOccurs="0" maxOccurs="1" type="pageTypePublishTargetTypes" />
                <xs:element name="pagetypes" minOccurs="0" maxOccurs="1" type="pageTypes" />
                <xs:element name="permissionaccessentitytypes" minOccurs="0" maxOccurs="1" type="permissionAccessEntityTypes" />
                <xs:element name="permissioncategories" minOccurs="0" maxOccurs="1" type="permissionCategories" />
                <xs:element name="permissionkeys" minOccurs="0" maxOccurs="1" type="permissionKeys" />
                <xs:element name="singlepages" minOccurs="0" maxOccurs="1" type="singlePages" />
                <xs:element name="sociallinks" minOccurs="0" maxOccurs="1" type="socialLinks" />
                <xs:element name="stacks" minOccurs="0" maxOccurs="1" type="stacks" />
                <xs:element name="summarycategories" minOccurs="0" maxOccurs="1" type="summaryCategories" />
                <xs:element name="summaryfields" minOccurs="0" maxOccurs="1" type="summaryFields" />
                <xs:element name="summarytemplates" minOccurs="0" maxOccurs="1" type="summaryTemplates" />
                <xs:element name="systemcaptcha" minOccurs="0" maxOccurs="1" type="systemCaptcha" />
                <xs:element name="systemcontenteditorsnippets" minOccurs="0" maxOccurs="1" type="systemContentEditorSnippets" />
                <xs:element name="tasks" minOccurs="0" maxOccurs="1" type="tasks" />
                <xs:element name="tasksets" minOccurs="0" maxOccurs="1" type="taskSets" />
                <xs:element name="themes" minOccurs="0" maxOccurs="1" type="themes" />
                <xs:element name="thumbnailtypes" minOccurs="0" maxOccurs="1" type="thumbnailTypes" />
                <xs:element name="trees" minOccurs="0" maxOccurs="1" type="trees" />
                <xs:element name="workflowprogresscategories" minOccurs="0" maxOccurs="1" type="workflowProgressCategories" />
                <xs:element name="workflowtypes" minOccurs="0" maxOccurs="1" type="workflowTypes" />
            </xs:all>
            <xs:attribute name="version" type="xs:string" use="required" fixed="1.0" />
        </xs:complexType>
    </xs:element>

    <!-- @see ImportAttributeCategoriesRoutine -->
    <xs:complexType name="attributeCategories">
        <xs:sequence>
            <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="attributetypes" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="attributetype" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="standard-attribute-category" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="allow-sets" type="zero-or-one" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="abstractAttributeKeys">
        <xs:sequence>
            <xs:element name="attributekey" minOccurs="1" maxOccurs="unbounded">
                <xs:alternative test="@type = 'address'" type="addressAttributeKey" />
                <xs:alternative test="@type = 'boolean'" type="booleanAttributeKey" />
                <xs:alternative test="@type = 'calendar'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'calendar_event'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'date_time'" type="dateTimeAttributeKey" />
                <xs:alternative test="@type = 'duration'" type="durationAttributeKey" />
                <xs:alternative test="@type = 'email'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'express'" type="expressAttributeKey" />
                <xs:alternative test="@type = 'image_file'" type="imageFileAttributeKey" />
                <xs:alternative test="@type = 'number'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'page_selector'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'rating'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'select'" type="selectAttributeKey" />
                <xs:alternative test="@type = 'site'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'social_links'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'telephone'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'text'" type="textAttributeKey" />
                <xs:alternative test="@type = 'textarea'" type="textareaAttributeKey" />
                <xs:alternative test="@type = 'topics'" type="topicsAttributeKey" />
                <xs:alternative test="@type = 'url'" type="unconfigurableAttributeKey" />
                <xs:alternative test="@type = 'user_group'" type="userGroupAttributeKey" />
                <xs:alternative test="@type = 'user_selector'" type="unconfigurableAttributeKey" />
                <xs:alternative type="customAttributeKey" />
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportAttributesRoutine -->
    <xs:complexType name="attributeKeys">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKeys">
                <xs:assert test="every $attributeKey in attributekey satisfies ($attributeKey/@category and $attributeKey/@category != '')" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="abstractAttributeKey">
        <xs:attribute name="category" type="standard-attribute-category-or-empty" use="optional" />
        <xs:attribute name="handle" type="handle-required" use="required" />
        <xs:attribute name="package" type="handle" use="required" />
        <xs:attribute name="type" type="handle-required" use="required" />
        <!-- @see Concrete\Core\Entity\Attribute\Key\Key\StandardImportLoader -->
        <xs:attribute name="name" type="string-required" use="required" />
        <xs:attribute name="indexed" type="zero-or-one" use="optional" />
        <xs:attribute name="internal" type="zero-or-one" use="optional" />
        <!-- @todo unused in Concrete\Core\Entity\Attribute\Key\Key\StandardImportLoader: remove it? or fix StandardImportLoader? -->
        <xs:attribute name="searchable" type="zero-or-one" use="optional" />
        <!-- @see Concrete\Core\Attribute\Category\ExpressCategory -->
        <xs:attribute name="unique" type="zero-or-one-or-empty" use="optional" />
        <!-- @see Concrete\Core\Attribute\Category\UserCategory -->
        <xs:attribute name="profile-displayed" type="zero-or-one" use="optional" />
        <xs:attribute name="profile-editable" type="zero-or-one" use="optional" />
        <xs:attribute name="profile-required" type="zero-or-one" use="optional" />
        <xs:attribute name="register-editable" type="zero-or-one" use="optional" />
        <xs:attribute name="register-required" type="zero-or-one" use="optional" />
        <xs:attribute name="member-list-displayed" type="zero-or-one" use="optional" />
        <!-- @see Concrete\Core\Attribute\Category\ExpressCategory -->
        <xs:assert test="@category = 'express' or not(@unique)">
           <xs:annotation>
               <xs:documentation>This attribute is only for express attribues</xs:documentation>
           </xs:annotation>
       </xs:assert>
        <!-- @see Concrete\Core\Attribute\Category\UserCategory -->
        <xs:assert test="@category = 'user' or not(@profile-displayed)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
        <xs:assert test="@category = 'user' or not(@profile-editable)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
        <xs:assert test="@category = 'user' or not(@profile-required)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
        <xs:assert test="@category = 'user' or not(@register-editable)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
        <xs:assert test="@category = 'user' or not(@register-required)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
        <xs:assert test="@category = 'user' or not(@member-list-displayed)">
            <xs:annotation>
                <xs:documentation>This attribute is only for user attribues</xs:documentation>
            </xs:annotation>
        </xs:assert>
    </xs:complexType>

    <xs:complexType name="customAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip" />
                </xs:sequence>
                <xs:anyAttribute processContents="skip" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="unconfigurableAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="addressAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="countries" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="country" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="custom-countries" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="default-country" type="xs:string" use="optional" />
                            <xs:attribute name="geolocate-country" type="zero-or-one-or-empty" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="booleanAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="checked" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="checkbox-label" type="xs:string" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dateTimeAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="use-now-if-empty" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="mode" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="date" />
                                        <xs:enumeration value="date_text" />
                                        <xs:enumeration value="date_time" />
                                        <xs:enumeration value="text" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="text-custom-format" type="xs:string" use="optional" />
                            <xs:attribute name="time-resolution" type="integer-greather-than-zero" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="durationAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="unitType" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="seconds" />
                                        <xs:enumeration value="minutes" />
                                        <xs:enumeration value="hours" />
                                        <xs:enumeration value="days" />
                                        <xs:enumeration value="weeks" />
                                        <xs:enumeration value="months" />
                                        <xs:enumeration value="years" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="text-custom-format" type="xs:string" use="optional" />
                            <xs:attribute name="time-resolution" type="integer-greather-than-zero" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="expressAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="entity" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="handle" type="handle" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="imageFileAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="mode" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="file_manager" />
                                        <xs:enumeration value="html_input" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="selectAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="options" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="option" minOccurs="0" maxOccurs="unbounded">
                                                <xs:complexType>
                                                    <xs:attribute name="value" type="xs:string" use="required" />
                                                    <xs:attribute name="is-end-user-added" type="zero-or-one-or-empty" use="optional" />
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="allow-multiple-values" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="display-multiple-values" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="display-order" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="alpha_asc" />
                                        <xs:enumeration value="display_asc" />
                                        <xs:enumeration value="popularity_desc" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="allow-other-values" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="hide-none-option" type="zero-or-one-or-empty" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="textAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="placeholder" type="xs:string" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="textareaAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="mode" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="rich_text" />
                                        <xs:enumeration value="rich_text_custom" />
                                        <xs:enumeration value="text" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="topicsAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="tree" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="name" type="string-required" use="required" />
                            <xs:attribute name="path" type="string-required" use="required" />
                            <xs:attribute name="allow-multiple-values" type="zero-or-one-or-empty" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="userGroupAttributeKey">
        <xs:complexContent>
            <xs:extension base="abstractAttributeKey">
                <xs:sequence>
                    <xs:element name="type" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="group-selection-method" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>A for GROUP_SELECTION_METHOD_ALL, G for GROUP_SELECTION_METHOD_IN_GROUP, P for GROUP_SELECTION_METHOD_PERMISSIONS</xs:documentation>
                                        </xs:annotation>
                                        <xs:enumeration value="" />
                                        <xs:enumeration value="A" />
                                        <xs:enumeration value="G" />
                                        <xs:enumeration value="P" />
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="display-groups-beneath-specific-parent" type="zero-or-one-or-empty" use="optional" />
                            <xs:attribute name="display-groups-parent-group" type="xs:string" use="optional" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see ImportAttributeSetsRoutine -->
    <xs:complexType name="attributeSets">
        <xs:sequence>
            <xs:element name="attributeset" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="attributekey" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="category" type="standard-attribute-category" use="required" />
                    <!-- @todo make it required, adding it to the core -->
                    <xs:attribute name="package" type="handle" use="optional" />
                    <!-- @todo make it required, adding it to the core -->
                    <xs:attribute name="name" type="string-required" use="optional" />
                    <xs:attribute name="locked" type="zero-or-one" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportAttributeTypesRoutine -->
    <xs:complexType name="attributeTypes">
        <xs:sequence>
            <xs:element name="attributetype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="categories" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="category" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <!-- @todo make it required, adding it to the core -->
                    <xs:attribute name="name" type="xs:string" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBannedWordsRoutine -->
    <xs:complexType name="bannedWords">
        <xs:sequence>
            <xs:element name="banned_word" type="string-required" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBlockTypesRoutine -->
    <xs:complexType name="blockTypes">
        <xs:sequence>
            <xs:element name="blocktype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBlockTypeSetsRoutine -->
    <xs:complexType name="blockTypeSets">
        <xs:sequence>
            <xs:element name="blocktypeset" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="blocktype" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <!-- @todo make it required, adding it to the core -->
                    <xs:attribute name="package" type="handle" use="optional" />
                    <!-- @todo make it required -->
                    <xs:attribute name="name" type="string-required" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBoardDataSourcesRoutine -->
    <xs:complexType name="boardDataSources">
        <xs:sequence>
            <xs:element name="datasource" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBoardSlotTemplatesRoutine -->
    <xs:complexType name="boardSlotTemplates">
        <xs:sequence>
            <xs:element name="template" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="tags" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="tags" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                            <xs:attribute name="value" type="xs:string" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="icon" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBoardTemplatesRoutine -->
    <xs:complexType name="boardTemplates">
        <xs:sequence>
            <xs:element name="template" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <!-- @todo remove text content -->
                    <xs:simpleContent>
                        <xs:extension base="empty-string-after-trim">
                            <xs:attribute name="package" type="handle" use="required" />
                            <xs:attribute name="name" type="string-required" use="required" />
                            <xs:attribute name="icon" type="string-required" use="required" />
                            <xs:attribute name="handle" type="handle-required" use="required" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportBoardsRoutine -->
    <xs:complexType name="boards">
        <xs:sequence>
            <xs:element name="board" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="datasources" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="datasource" minOccurs="1" maxOccurs="unbounded">
                                        <xs:alternative test="@source = 'page'" type="pageBoardDataSource" />
                                        <xs:alternative test="@source = 'calendar_event'" type="calendarEventBoardDataSource" />
                                        <xs:alternative type="customBoardDataSource" />
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="templates" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="template" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="template" type="handle-required" use="required" />
                    <xs:attribute name="sort" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="relevant_date_asc" />
                                <xs:enumeration value="relevant_date_desc" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="uses-custom-template-subset" type="zero-or-one-or-empty" use="required" />
                    <!-- @todo It's not used in the import routine -->
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:assert test="@uses-custom-template-subset = '1' or not(templates)">
                        <xs:annotation>
                            <xs:documentation>The templates node can be specified only if uses-custom-template-subset is 1</xs:documentation>
                        </xs:annotation>
                    </xs:assert>
                    <xs:assert test="@uses-custom-template-subset != '1' or templates">
                        <xs:annotation>
                            <xs:documentation>The templates node must be specified since uses-custom-template-subset is 1</xs:documentation>
                        </xs:annotation>
                    </xs:assert>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="abstractBoardDataSource">
        <xs:attribute name="source" type="handle-required" use="required" />
        <xs:attribute name="weight" type="xs:integer" use="required" />
        <xs:attribute name="name" type="string-required" use="required" />
        <xs:attribute name="day-interval-future" type="xs:integer" use="required" />
        <xs:attribute name="day-interval-past" type="xs:integer" use="required" />
    </xs:complexType>

    <xs:complexType name="customBoardDataSource">
        <xs:complexContent>
            <xs:extension base="abstractBoardDataSource">
                <xs:sequence>
                    <xs:element name="configuration" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Board\DataSource\Saver\PageSaver -->
    <xs:complexType name="pageBoardDataSource">
        <xs:complexContent>
            <xs:extension base="abstractBoardDataSource">
                <xs:sequence>
                    <xs:element name="configuration" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="fields" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="field" minOccurs="1" maxOccurs="unbounded">
                                                <xs:alternative test="@key = 'page_type'" type="pageTypeBoardDataSourceField" />
                                                <xs:alternative type="jsonBoardDataSourceField" />
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Board\DataSource\Saver\CalendarEventSaver -->
    <xs:complexType name="calendarEventBoardDataSource">
        <xs:complexContent>
            <xs:extension base="abstractBoardDataSource">
                <xs:sequence>
                    <xs:element name="configuration" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="fields" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="field" minOccurs="1" maxOccurs="unbounded">
                                                <xs:alternative test="@key = 'page_type'" type="pageTypeBoardDataSourceField" />
                                                <xs:alternative type="jsonBoardDataSourceField" />
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="max-occurrences-of-event" type="integer-non-negative" use="required" />
                            <xs:attribute name="calendar" type="string-required" use="required" />
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="boardDataSourceFieldAttributes">
        <xs:attribute name="key" type="handle-required" use="required" />
    </xs:attributeGroup>

    <!-- @see Concrete\Core\Search\Field\AbstractField -->
    <xs:complexType name="jsonBoardDataSourceField">
        <xs:simpleContent>
            <xs:extension base="string-required">
                <xs:attributeGroup ref="boardDataSourceFieldAttributes"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Page\Search\Field\Field\PageTypeField -->
    <xs:complexType name="pageTypeBoardDataSourceField">
        <xs:sequence>
            <xs:element name="pagetype" minOccurs="1" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\{ccm:export:pagetype:[a-z]([a-z0-9_]*[a-z0-9])?\}" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
        <xs:attributeGroup ref="boardDataSourceFieldAttributes"/>
    </xs:complexType>

    <!-- @see ImportConfigValuesRoutine -->
    <xs:complexType name="config">
        <xs:sequence>
            <xs:element name="option" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="name" type="string-required" use="required" />
                            <!-- @todo make it required, adding it to the core -->
                            <xs:attribute name="package" type="handle" use="optional" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportContainersRoutine -->
    <xs:complexType name="containers">
        <xs:sequence>
            <xs:element name="container" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="icon" type="string-required" use="required" />
                    <xs:attribute name="handle" type="handle-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportConversationEditorsRoutine -->
    <xs:complexType name="conversationEditors">
        <xs:sequence>
            <xs:element name="editor" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="activated" type="zero-or-one-or-empty" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportConversationRatingTypesRoutine -->
    <xs:complexType name="conversationRatingTypes">
        <xs:sequence>
            <xs:element name="conversationratingtype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="points" type="xs:integer" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportDesignTagsRoutine -->
    <xs:complexType name="designTags">
        <xs:sequence>
            <xs:element name="tag" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="value" type="string-required" use="required" />
                    <!-- @todo add package? -->
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportExpressAssociationsRoutine -->
    <!-- @see ImportExpressEntitiesRoutine -->
    <!-- @see ImportExpressFormsRoutine -->
    <!-- @see ImportExpressRelationsRoutine -->
    <xs:complexType name="expressEntities">
        <xs:sequence>
            <!-- @see Concrete\Core\Export\Item\Express\Entity -->
            <xs:element name="entity" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <!-- @see ImportExpressEntitiesRoutine -->
                        <xs:element name="attributekeys" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="abstractAttributeKeys">
                                        <xs:assert test="every $attributeKey in attributekey satisfies (not($attributeKey/@category) or $attributeKey/@category = '')" />
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                        <!-- @see Concrete\Core\Export\Item\Express\Association -->
                        <!-- @see ImportExpressAssociationsRoutine -->
                        <!-- @see ImportExpressRelationsRoutine -->
                        <xs:element name="associations" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="association" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="type" use="required">
                                                <xs:simpleType>
                                                    <xs:restriction base="xs:string">
                                                        <xs:pattern value="[A-Za-z]\w*" />
                                                    </xs:restriction>
                                                </xs:simpleType>
                                            </xs:attribute>
                                            <xs:attribute name="id" type="guid" use="required" />
                                            <xs:attribute name="source-entity" type="guid" use="required" />
                                            <xs:attribute name="target-entity" type="guid" use="required" />
                                            <xs:attribute name="target-property-name" use="optional">
                                                <xs:simpleType>
                                                    <xs:restriction base="xs:string">
                                                        <xs:pattern value="([A-Za-z]\w*)?" />
                                                    </xs:restriction>
                                                </xs:simpleType>
                                            </xs:attribute>
                                            <xs:attribute name="inversed-by-property-name" use="optional">
                                                <xs:simpleType>
                                                    <xs:restriction base="xs:string">
                                                        <xs:pattern value="([A-Za-z]\w*)?" />
                                                    </xs:restriction>
                                                </xs:simpleType>
                                            </xs:attribute>
                                            <xs:attribute name="is-owned" type="zero-or-one-or-empty" use="optional" />
                                            <xs:attribute name="is-owner" type="zero-or-one-or-empty" use="optional" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <!-- @see Concrete\Core\Export\Item\Express\Form -->
                        <!-- @see ImportExpressFormsRoutine -->
                        <xs:element name="forms" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="form" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="fieldsets" minOccurs="0" maxOccurs="1">
                                                    <xs:complexType>
                                                        <xs:sequence>
                                                            <xs:element name="fieldset" minOccurs="1" maxOccurs="unbounded">
                                                                <xs:complexType>
                                                                    <xs:sequence>
                                                                        <xs:element name="controls" minOccurs="0" maxOccurs="1">
                                                                            <xs:complexType>
                                                                                <xs:sequence>
                                                                                    <xs:element name="control" minOccurs="1" maxOccurs="unbounded">
                                                                                        <xs:alternative test="@type = 'association'" type="associationExpressEntryFormControl" />
                                                                                        <xs:alternative test="@type = 'attribute_key'" type="attributeKeyExpressEntryFormControl" />
                                                                                        <xs:alternative test="@type = 'entity_property' and @type-id = 'author'" type="authorExpressEntryFormControl" />
                                                                                        <xs:alternative test="@type = 'entity_property' and @type-id = 'public-identifier'" type="publicIdentifierExpressEntryFormControl" />
                                                                                        <xs:alternative test="@type = 'entity_property' and @type-id = 'text'" type="textExpressEntryFormControl" />
                                                                                        <xs:alternative type="customExpressEntryFormControl" />
                                                                                    </xs:element>
                                                                                </xs:sequence>
                                                                            </xs:complexType>
                                                                        </xs:element>
                                                                    </xs:sequence>
                                                                    <xs:attribute name="title" type="xs:string" use="required" />
                                                                    <xs:attribute name="description" type="xs:string" use="required" />
                                                                </xs:complexType>
                                                            </xs:element>
                                                        </xs:sequence>
                                                    </xs:complexType>
                                                </xs:element>
                                            </xs:sequence>
                                            <xs:attribute name="id" type="guid" use="required" />
                                            <xs:attribute name="name" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="id" type="guid" use="required" />
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="plural_handle" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <!-- @todo it's exported but not imported -->
                    <xs:attribute name="supports_custom_display_order" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="include_in_public_list" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="use_separate_site_result_buckets" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="description" type="xs:string" use="optional" />
                    <xs:attribute name="default_view_form" type="guid" use="optional" />
                    <xs:attribute name="default_edit_form" type="guid" use="optional" />
                    <xs:attribute name="results-folder" type="string-required" use="optional" />
                    <!-- @todo make it required, adding it to the core (also check if it's exported) -->
                    <xs:attribute name="package" type="handle" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control -->
    <xs:complexType name="abstractExpressEntryFormControl">
        <xs:attribute name="id" type="guid" use="required" />
        <xs:attribute name="type" type="handle-required" use="required" />
        <xs:attribute name="required" type="zero-or-one-or-empty" use="optional" />
        <xs:attribute name="custom-label" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name="customExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:sequence>
                    <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip" />
                </xs:sequence>
                <xs:anyAttribute processContents="skip" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control\AssociationControl -->
    <xs:complexType name="associationExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:attribute name="association" type="guid" use="required" />
                <xs:attribute name="label-mask" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control\AttributeKeyControl -->
    <xs:complexType name="attributeKeyExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:sequence>
                    <xs:element name="attributekey" type="element-with-required-handle" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control\AuthorControl -->
    <xs:complexType name="authorExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:attribute name="type-id" type="xs:string" fixed="author" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control\PublicIdentifierControl -->
    <xs:complexType name="publicIdentifierExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:attribute name="type-id" type="xs:string" fixed="public-identifier" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- @see Concrete\Core\Export\Item\Express\Control\TextControl -->
    <xs:complexType name="textExpressEntryFormControl">
        <xs:complexContent>
            <xs:extension base="abstractExpressEntryFormControl">
                <xs:sequence>
                    <xs:element name="headline" type="xs:string" minOccurs="0" maxOccurs="1" />
                    <xs:element name="body" type="xs:string" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="type-id" type="xs:string" fixed="text" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="expressEntries">
        <xs:sequence>
            <xs:element name="entry" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="attributes" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="attributekey" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip" />
                                            </xs:sequence>
                                            <xs:anyAttribute processContents="skip" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="id" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:pattern value="[0-9a-f]+" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="label" type="string-required" use="required" />
                    <xs:attribute name="entity" type="handle-required" use="required" />
                    <xs:attribute name="display-order" type="xs:integer" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportConversationFlagTypesRoutine -->
    <xs:complexType name="flagTypes">
        <xs:sequence>
            <xs:element name="flag_type" type="string-required" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportGeolocatorsRoutine -->
    <xs:complexType name="geolocators">
        <xs:sequence>
            <xs:element name="geolocator" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="option" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:simpleContent>
                                    <xs:extension base="string-required">
                                        <xs:attribute name="name" type="string-required" use="required" />
                                    </xs:extension>
                                </xs:simpleContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="description" type="xs:string" use="optional" />
                    <xs:attribute name="active" type="zero-or-one-or-empty" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportGroupsRoutine -->
    <xs:complexType name="groups">
        <xs:sequence>
            <xs:element name="group" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="path" type="xs:string" use="optional" />
                    <xs:attribute name="description" type="xs:string" use="optional" />
                    <xs:attribute name="package" type="handle" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportIpAccessControlCategoriesRoutine -->
    <xs:complexType name="ipAccessControlCategories">
        <xs:sequence>
            <xs:element name="ipaccesscontrolcategory" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="enabled" type="zero-or-one-or-empty" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="max-events" use="required" type="integer-greather-than-zero" />
                    <xs:attribute name="time-window" use="required" type="integer-greather-than-zero" />
                    <xs:attribute name="ban-duration" use="required" type="integer-greather-than-zero" />
                    <xs:attribute name="site-specific" use="required" type="zero-or-one-or-empty" />
                    <xs:attribute name="log-channel-handle" use="optional" type="handle-with-minus" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportJobsRoutine -->
    <xs:complexType name="jobs">
        <xs:sequence>
            <xs:element name="job" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportJobSetsRoutine -->
    <xs:complexType name="jobSets">
        <xs:sequence>
            <xs:element name="jobset" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="job" type="element-with-required-handle" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportPackagesRoutine -->
    <xs:complexType name="packages">
        <xs:sequence>
            <xs:element name="package" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="full-content-swap" type="xs:string" fixed="true" use="optional" />
                    <xs:attribute name="content-swap-file" type="string-required" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pageFeeds">
        <xs:sequence>
            <xs:element name="feed" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="handle" type="handle-required" minOccurs="1" maxOccurs="1" />
                        <xs:element name="parent" minOccurs="0" maxOccurs="1" type="string-required" />
                        <xs:element name="title" type="string-required" minOccurs="1" maxOccurs="1" />
                        <xs:element name="description" type="xs:string" minOccurs="1" maxOccurs="1" />
                        <xs:element name="descendents" type="zero-or-one" minOccurs="0" maxOccurs="1" />
                        <xs:element name="aliases" type="zero-or-one" minOccurs="0" maxOccurs="1" />
                        <xs:element name="featured" type="zero-or-one" minOccurs="0" maxOccurs="1" />
                        <xs:element name="pagetype" minOccurs="0" maxOccurs="1">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:pattern value="\{ccm:export:pagetype:[a-z]([a-z0-9_]*[a-z0-9])?\}" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="contenttype">
                            <xs:complexType>
                                <xs:attribute name="type">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:enumeration value="description" />
                                            <xs:enumeration value="area" />
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportPageContentRoutine wip -->
    <xs:complexType name="pages">
        <xs:sequence>
            <xs:element name="page" type="page" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pageTemplates">
        <xs:sequence>
            <xs:element name="pagetemplate" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="icon" type="xs:string" use="optional" />
                    <xs:attribute name="internal" type="zero-or-one-or-empty" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pageTypeComposerControlTypes">
        <xs:sequence>
            <xs:element name="type" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pageTypes">
        <xs:sequence>
            <xs:element name="pagetype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="pagetemplates" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="pagetemplate" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="handle" type="handle-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:attribute name="type" use="required">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:enumeration value="all" />
                                            <xs:enumeration value="custom" />
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:attribute>
                                <xs:attribute name="default" type="string-required" use="required" />
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="target" minOccurs="0" maxOccurs="1">
                            <!-- @todo switch to XSD 1.1 to support what's imported by configurePageTypePublishTargetFromImport() -->
                            <xs:complexType>
                                <xs:attribute name="handle" type="handle-required" use="required" />
                                <xs:anyAttribute processContents="skip" />
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="composer" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:all>
                                    <xs:element name="formlayout" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="set" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                        <xs:sequence>
                                                            <xs:element name="control" minOccurs="1" maxOccurs="unbounded">
                                                                <xs:complexType>
                                                                    <xs:attribute name="handle" type="handle-required" use="required" />
                                                                    <xs:attribute name="type" type="handle-required" use="required" />
                                                                    <xs:attribute name="required" type="zero-or-one" use="optional" />
                                                                    <xs:attribute name="custom-template" type="xs:string" use="required" />
                                                                    <xs:attribute name="custom-label" type="xs:string" use="optional" />
                                                                    <xs:attribute name="description" type="xs:string" use="optional" />
                                                                    <xs:attribute name="output-control-id" type="xs:string" use="optional" />
                                                                </xs:complexType>
                                                            </xs:element>
                                                        </xs:sequence>
                                                        <xs:attribute name="name" type="xs:string" use="required" />
                                                        <xs:attribute name="description" type="xs:string" use="optional" />
                                                    </xs:complexType>
                                                </xs:element>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="output" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="pagetemplate" minOccurs="1" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                        <xs:sequence>
                                                            <xs:element name="page" type="page" minOccurs="0" maxOccurs="1" />
                                                        </xs:sequence>
                                                        <xs:attribute name="handle" type="handle-required" use="required" />
                                                    </xs:complexType>
                                                </xs:element>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:all>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <!-- @todo add empty package in every xml -->
                    <xs:attribute name="package" type="handle" use="optional" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="internal" type="zero-or-one" use="optional" />
                    <xs:attribute name="site-type" type="handle" use="optional" />
                    <xs:attribute name="launch-in-composer" type="zero-or-one" use="optional" />
                    <xs:attribute name="is-frequently-added" type="zero-or-one" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pageTypePublishTargetTypes">
        <xs:sequence>
            <xs:element name="type" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permissionAccessEntityTypes">
        <xs:sequence>
            <xs:element name="permissionaccessentitytype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="categories" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="handle" type="handle-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="xs:string" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permissionCategories">
        <xs:sequence>
            <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <!-- todo add empty package in every xml? -->
                    <xs:attribute name="package" type="handle" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permissionKeys">
        <xs:sequence>
            <xs:element name="permissionkey" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="access" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <!-- @todo with XSD 1.1 we can use xs:all -->
                                <xs:sequence>
                                    <xs:element name="group" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="name" type="string-required" use="required" />
                                            <xs:attribute name="description" type="xs:string" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="entity" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="type" type="handle-required" use="required" />
                                            <xs:attribute name="name" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="category" type="handle-required" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="description" type="xs:string" use="optional" />
                    <xs:attribute name="can-trigger-workflow" type="zero-or-one-or-true" use="optional" />
                    <xs:attribute name="has-custom-class" type="zero-or-one-or-true" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportPageContentRoutine wip -->
    <xs:complexType name="page">
        <xs:sequence>
            <xs:element name="attributes" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="attributekey" minOccurs="1" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:all>
                                    <xs:element name="topics" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="topic" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:simpleType>
                                                        <xs:restriction base="string-required" />
                                                    </xs:simpleType>
                                                </xs:element>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="value" minOccurs="0" maxOccurs="1" />
                                </xs:all>
                                <xs:attribute name="handle" type="handle-required" />
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="area" minOccurs="0" maxOccurs="unbounded" type="area" />
        </xs:sequence>
        <!-- todo add empty package in every xml? -->
        <xs:attribute name="package" type="handle" use="optional" />
        <xs:attribute name="path" type="xs:string" use="optional" />
        <xs:attribute name="name" type="xs:string" use="optional" />
        <xs:attribute name="pagetype" type="handle" use="optional" />
        <xs:attribute name="custom-path" type="xs:string" use="optional" />
        <xs:attribute name="description" type="xs:string" use="optional" />
        <xs:attribute name="global" type="true-or-empty" use="optional" />
        <xs:attribute name="root" type="true-or-empty" use="optional" />
        <xs:attribute name="public-date" type="date-time" use="optional" />
        <!-- @todo unused -->
        <xs:attribute name="filename" type="xs:string" use="optional" />
        <!-- @todo unused -->
        <xs:attribute name="user" type="xs:string" use="optional" />
        <!-- @todo unused -->
        <xs:attribute name="template" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name="singlePages">
        <xs:sequence>
            <xs:element name="page" type="page" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="socialLinks">
        <xs:sequence>
            <xs:element name="link" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="service" type="handle-required" use="required" />
                    <xs:attribute name="url" type="url-or-hash" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="stacks">
        <xs:sequence>
            <xs:element name="stack" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="area" type="area" minOccurs="1" maxOccurs="1" />
                    </xs:sequence>
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="type" use="optional">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="folder" />
                                <xs:enumeration value="global_area" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="path" type="xs:string" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="summaryCategories">
        <xs:sequence>
            <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="summaryFields">
        <xs:sequence>
            <xs:element name="field" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="summaryTemplates">
        <xs:sequence>
            <xs:element name="template" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="categories" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="handle" type="handle-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="fields" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="field" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="handle-required">
                                                    <xs:attribute name="required" type="zero-or-one" use="optional" />
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="tags" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="tag" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="value" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="icon" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="systemCaptcha">
        <xs:sequence>
            <xs:element name="library" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="string-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="activated" type="zero-or-one" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="systemContentEditorSnippets">
        <xs:sequence>
            <xs:element name="snippet" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="activated" type="zero-or-one" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="tasks">
        <xs:sequence>
            <xs:element name="task" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <!-- todo add empty package in every xml? -->
                    <xs:attribute name="package" type="handle" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="taskSets">
        <xs:sequence>
            <xs:element name="taskset" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="task" minOccurs="1" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="handle" type="handle-required" use="required" />
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="themes">
        <xs:sequence>
            <xs:element name="theme" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="activated" type="zero-or-one" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- @see ImportFileImportantThumbnailTypesRoutine -->
    <xs:complexType name="thumbnailTypes">
        <xs:sequence>
            <xs:element name="thumbnailtype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="filesets" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="fileset" minOccurs="1" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="name" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                    <xs:attribute name="sizingMode" use="optional">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="exact" />
                                <xs:enumeration value="proportional" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="upscalingEnabled" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="keepAnimations" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="width" type="integer-greather-than-zero" use="optional" />
                    <xs:attribute name="height" type="integer-greather-than-zero" use="optional" />
                    <xs:attribute name="required" type="zero-or-one-or-empty" use="optional" />
                    <xs:attribute name="limitedToFileSets" type="zero-or-one-or-empty" use="optional" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="trees">
        <xs:sequence>
            <xs:element name="tree" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="category" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="topic" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="name" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:attribute name="name" type="string-required" use="required" />
                                <xs:attribute name="default" type="zero-or-one-or-empty" use="optional" />
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="topic_category" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="topic" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:attribute name="name" type="string-required" use="required" />
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:attribute name="name" type="string-required" use="required" />
                                <xs:attribute name="default" type="zero-or-one-or-empty" use="optional" />
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="topic" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="name" type="string-required" use="required" />
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="type" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="topic" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="workflowProgressCategories">
        <xs:sequence>
            <xs:element name="category" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="workflowTypes">
        <xs:sequence>
            <xs:element name="workflowtype" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="handle" type="handle-required" use="required" />
                    <xs:attribute name="package" type="handle" use="required" />
                    <xs:attribute name="name" type="string-required" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- Common types -->

    <xs:simpleType name="string-required">
        <xs:restriction base="xs:string">
            <xs:minLength value="1 " />
            <xs:pattern value=".*\S.*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="empty-string">
        <xs:restriction base="xs:string">
            <xs:maxLength value="0" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="empty-string-after-trim">
        <xs:restriction base="xs:string">
            <xs:pattern value="\s*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="handle">
        <xs:restriction base="xs:string">
            <xs:maxLength value="255 " />
            <xs:pattern value="[a-z]?([a-z0-9_]*[a-z0-9])?" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="handle-with-minus">
        <xs:restriction base="xs:string">
            <xs:maxLength value="255 " />
            <xs:pattern value="[a-z]?([a-z0-9_\-]*[a-z0-9])?" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="handle-required">
        <xs:restriction base="handle">
            <xs:minLength value="1" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="zero-or-one">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
            <xs:maxInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="zero-or-one-or-true">
        <xs:restriction base="xs:string">
            <xs:enumeration value="0" />
            <xs:enumeration value="1" />
            <xs:enumeration value="true" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="zero-or-one-or-empty">
        <xs:restriction base="xs:string">
            <xs:enumeration value="0" />
            <xs:enumeration value="1" />
            <xs:enumeration value="" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="true-or-empty">
        <xs:restriction base="xs:string">
            <xs:enumeration value="" />
            <xs:enumeration value="true" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="integer-greather-than-zero">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="integer-non-negative">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="element-with-required-handle">
        <xs:attribute name="handle" type="handle-required" use="required" />
    </xs:complexType>
    <xs:simpleType name="empty-attribute-category">
        <xs:restriction base="xs:string">
            <xs:enumeration value="" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="standard-attribute-category">
        <xs:restriction base="xs:string">
            <xs:enumeration value="collection" />
            <xs:enumeration value="event" />
            <xs:enumeration value="express" />
            <xs:enumeration value="file" />
            <xs:enumeration value="site" />
            <xs:enumeration value="site_type" />
            <xs:enumeration value="user" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="standard-attribute-category-or-empty">
        <xs:union memberTypes="empty-attribute-category standard-attribute-category" />
    </xs:simpleType>
    <xs:simpleType name="date-time">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9] [0-2][0-9]:[0-5][0-9](:[0-5][0-9])?" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="url">
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="https?://[^/ ]+[^ ]+" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="url-or-hash">
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="#|https?://[^/ ]+[^ ]+" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}" />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="area">
        <xs:all>
            <xs:element name="style" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="backgroundColor" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="backgroundImage" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="backgroundRepeat" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="backgroundSize" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="backgroundPosition" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="borderWidth" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="borderColor" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="borderStyle" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="borderRadius" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="baseFontSize" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="alignment" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="textColor" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="linkColor" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="paddingTop" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="paddingBottom" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="paddingLeft" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="paddingRight" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="marginTop" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="marginBottom" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="marginLeft" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="marginRight" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="rotate" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowHorizontal" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowVertical" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowSpread" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowBlur" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowColor" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="boxShadowInset" minOccurs="0" maxOccurs="1" type="zero-or-one-or-empty" />
                        <xs:element name="customClass" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="customID" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="customElementAttribute" minOccurs="0" maxOccurs="1" type="xs:string" />
                        <xs:element name="hideOnExtraSmallDevice" minOccurs="0" maxOccurs="1" type="zero-or-one-or-empty" />
                        <xs:element name="hideOnSmallDevice" minOccurs="0" maxOccurs="1" type="zero-or-one-or-empty" />
                        <xs:element name="hideOnMediumDevice" minOccurs="0" maxOccurs="1" type="zero-or-one-or-empty" />
                        <xs:element name="hideOnLargeDevice" minOccurs="0" maxOccurs="1" type="zero-or-one-or-empty" />
                    </xs:all>
                </xs:complexType>
            </xs:element>
            <xs:element name="blocks" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="block" minOccurs="0" maxOccurs="unbounded">
                            <!-- @todo add required "type" attribute (handle) and optional "name" attribute (string), still allowing any content -->
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
        <xs:attribute name="name" type="string-required" />
    </xs:complexType>
</xs:schema>
